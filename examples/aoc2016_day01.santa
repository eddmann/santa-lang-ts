input: read("aoc://2016/1")

let compass = [[0, 1], [1, 0], [0, -1], [-1, 0]];

let parse_instructions = split(", ") >> map(|i| [i[0], int(i[1..])]);

let distance = |[y, x]| abs(y) + abs(x);

part_one: {
  parse_instructions(input)
    |> fold_s(
      [[0, 0], 0],
      |[[x, y], dir], [turn, steps]| {
        let next_dir = if turn == "R" { dir + 1 } else { dir - 1 } % size(compass);
        let [dx, dy] = compass[next_dir];
        [[x + dx * steps, y + dy * steps], next_dir];
      }
    )
    |> distance;
}

part_two: {
  parse_instructions(input)
    |> fold_s(
      [[0, 0], 0, {}],
      |[[x, y], dir, visited], [turn, steps]| {
        let next_dir = if turn == "R" { dir + 1 } else { dir - 1 } % size(compass);
        let [dx, dy] = compass[next_dir];

        let path = 1..steps |> fold({}) |path, steps| {
          path + {[x + dx * steps, y + dy * steps]}
        };

        if let already_visited = find(visited `includes?` _, path) {
          break [already_visited];
        };

        [[x + dx * steps, y + dy * steps], next_dir, visited + path];
      }
    )
    |> distance;
}

test: {
  input: "R8, R4, R4, R8"
  part_one: 8
  part_two: 4
}
